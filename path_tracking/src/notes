def getTwist(pose,newx,newy,dir):
    linearTune = 10.0
    angularTune = 1

    d = distance(pose.x, pose.y,newx,newy)

    heading_to_p = math.atan2(newy - pose.y, newx - pose.x)
    #print("Heading to Point: " + str(heading_to_p))
    if(dir == -1):
        heading_error = angle_diff( heading_to_p,angle_diff(pose.theta, math.pi))
        print("Reverse Mode")
    else:
        heading_error = angle_diff(heading_to_p, pose.theta)
    #if(abs(heading_error) < .08):
    #    heading_error = 0
    #print("Error: " + str(heading_error))
    w = chop(angularTune * heading_error, -0.5, 0.5)

    v = chop(1.0 / (linearTune * abs(heading_error) + .000000001), 0.0, .5)

    if(dir == -1):
        v = v*-1

    dpose = Twist()
    dpose.linear.x = v
    dpose.angular.z = w
    #print(str(dpose))

    return dpose